<Window x:Class="Projekt_SternbergundMehr.Window_sponsors"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:f="clr-namespace:FluentWpfChromes;assembly=FluentWpfChromes"
          
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Projekt_SternbergundMehr"
        mc:Ignorable="d"
        Title="Sternberg und Mehr eV.- Sponsoren"  Height="920" Width="1650"
    WindowStartupLocation="CenterScreen" AllowsTransparency="False" WindowStyle="SingleBorderWindow" Background="White" WindowState="Maximized" MouseLeftButtonDown="Window_MouseLeftButtonDown"    >



    <Window.Resources>
        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Foreground" Value="#333" />
            <Setter Property="Background" Value="#FFEEF5F9" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderBrush" Value="#CCC" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Border x:Name="border" 
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="5">
                                <ScrollViewer x:Name="PART_ContentHost" 
                                              Margin="0" 
                                              VerticalScrollBarVisibility="Hidden" 
                                              HorizontalScrollBarVisibility="Hidden" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#2196F3" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#2196F3" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Define a DropShadowEffect Resource -->
        <DropShadowEffect x:Key="DefaultShadow" 
  BlurRadius="5"
         ShadowDepth="1"
                       Direction="270"
                       Color="Black"
                       Opacity="0.4"  />


        <DropShadowEffect x:Key="Shadow_Menu" 
              BlurRadius="20"
                     ShadowDepth="1"
                                   Direction="270"
                                   Color="Black"
                                   Opacity="0.2"  />


        <Style x:Key="ModernPanelStyle" TargetType="Border">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Background" Value="#FFFFFF"/>
            <Setter Property="BorderBrush" Value="#DDD"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="3" Opacity="0.3"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Definiere den Style für die allgemeinen Buttons -->
        <Style x:Key="ModernButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FF353232"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                To="Black"
                                                Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                To="Black"
                                                Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF005A99"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Home_btnStyle" TargetType="{x:Type Button}">


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                 BorderBrush="{TemplateBinding BorderBrush}"
                 BorderThickness="{TemplateBinding BorderThickness}"
                 CornerRadius="0">
                            <ContentPresenter HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color) "
                     To="LightGray"
                     Duration="0:0:0.6"/>




                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                     To="#FF287BC7"
                     Duration="0:0:0.6"/>




                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF005A99"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <!-- Definiere den Style für die speziellen Buttons -->
        <Style x:Key="SpecialButtonStyle" TargetType="{x:Type Button}">

            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                    To="LightGray"
                    Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                    To="#FF287BC7"
                    Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF005A99"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="SpecialButtonStyle_border" TargetType="{x:Type Button}">

            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}"
          CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center"
                        VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
              To="LightGray"
              Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
              To="White"
              Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF005A99"/>
                </Trigger>
            </Style.Triggers>

        </Style>



        <Style x:Key="SpecialButtonStyle2" TargetType="{x:Type Button}">

            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center"
                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
            To="LightGray"
            Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
            To="#FFEEF5F9"
            Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF005A99"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="SpecialButtonStyle3" TargetType="{x:Type Button}">

            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
BorderBrush="{TemplateBinding BorderBrush}"
BorderThickness="{TemplateBinding BorderThickness}"
CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center"
              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
    To="LightGray"
    Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
    To="#FFD42B2B"
    Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF005A99"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <!-- Definiere den Style für das DataGrid -->
        <Style TargetType="DataGrid" x:Key="ModernDataGridStyle">
            <Setter Property="AutoGenerateColumns" Value="False" />

            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="ColumnHeaderHeight" Value="35" />
            <Setter Property="RowHeight" Value="45" />
            <Setter Property="GridLinesVisibility" Value="All" />
            <Setter Property="VerticalGridLinesBrush" Value="#FFDDDDDD" />
            <Setter Property="HorizontalGridLinesBrush" Value="#FFDDDDDD" />

            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="#333333" />
            <Setter Property="BorderBrush" Value="#FF1189D4" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="RowBackground" Value="White" />
            <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="SelectionMode" Value="Extended" />
            <Setter Property="AlternatingRowBackground" Value="LightBlue" />


            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="White" />
                        <Setter Property="Foreground" Value="Black" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="FontSize" Value="15" />
                        <Setter Property="Padding" Value="0,5,10,5" />
                        <Setter Property="BorderBrush" Value="#FF1189D4" />
                        <Setter Property="BorderThickness" Value="1,1,1,1" />
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Padding" Value="10,5,10,5" />
                        <Setter Property="BorderBrush" Value="#FF1189D4" />
                        <Setter Property="FontSize" Value="14" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />

                        <Setter Property="BorderThickness" Value="0,0,1,1" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="BorderThickness" Value="0" />
                    </Style>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="RoundedButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="15" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="MenuItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" CornerRadius="5">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding Icon}" Width="24" Height="24" Margin="5"/>
                                    <ContentPresenter Margin="5"/>
                                </StackPanel>
                            </Border>
                            <Popup IsOpen="{TemplateBinding IsSubmenuOpen}" Placement="Right" 
                                   AllowsTransparency="True" PopupAnimation="Fade">
                                <Border Background="#FFEEF5F9" CornerRadius="5" Padding="5">
                                    <StackPanel>
                                        <ItemsPresenter />
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Hover-Effekt -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF3A71A4"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <!-- Klick-Effekt -->
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF285583"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ModernExpanderStyle" TargetType="Expander">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#FF3A71A4" Offset="0.0"/>
                        <GradientStop Color="#FF1E4A7A" Offset="1.0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Height" Value="70"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <StackPanel>
                                <ToggleButton x:Name="Header" Content="{TemplateBinding Header}" 
                                          Foreground="White" FontSize="20" 
                                          FontWeight="Bold" Background="Transparent"
                                          Padding="10" Height="70" Cursor="Hand"/>
                                <ContentPresenter x:Name="ExpandSite" Visibility="Collapsed"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Stil für moderne Buttons mit Hover -->
        <Style x:Key="HoverButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FF3A71A4"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="Transparent"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF3A71A4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>


    </Window.Resources>




    <Grid x:Name="grid_window"  Background="#01988B8B" Margin="0,0,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="52*"/>
            <RowDefinition Height="275*"/>
            <RowDefinition Height="125*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>

            <ColumnDefinition Width="61*"/>
            <ColumnDefinition Width="269*"/>
        </Grid.ColumnDefinitions>




        <Border BorderBrush="Black" BorderThickness="0" Effect="{StaticResource DefaultShadow}" CornerRadius="15" Background="White" Margin="65,29,45,65" Grid.Column="1" Grid.RowSpan="3"/>




        <StackPanel Height="904" Width="304" Orientation="Vertical" 
            Background="#FF1189D4" VerticalAlignment="Top"
            HorizontalAlignment="Center" Grid.RowSpan="3">

            <!-- Home-Button -->
            <Button x:Name="btn_home" Style="{StaticResource Home_btnStyle}"  
            BorderThickness="0" Foreground="White" Click="btn_home_Click"
            FontFamily="Segoe UI Semibold" FontSize="20"
            Background="#FF1189D4" Width="300" FontWeight="Bold" Height="94">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <Image Source="Images/home.png" Width="30" Height="30" Margin="0,0,10,0" />
                    <TextBlock Text="Home" FontWeight="Bold" VerticalAlignment="Center" />
                </StackPanel>
            </Button>

            <!-- Versandt-Menü als Expander mit Animation -->
            <Expander Header="📩 Versandt" Background="Transparent"   Foreground="White" FontSize="20" Width="300">
                <Expander.RenderTransform>
                    <ScaleTransform ScaleY="1"/>
                </Expander.RenderTransform>
                <Expander.Triggers>
                    <EventTrigger RoutedEvent="Expander.Expanded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                         From="0" To="1" Duration="0:0:0.6"
                                         AccelerationRatio="0.3" DecelerationRatio="0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Expander.Triggers>
                <StackPanel Background="White" >
                    <Button x:Name="brief_prnt" Content="📄 Serienbrief" Click="brief_prnt_Click"
                    Background="Transparent" Foreground="#FF3A71A4" Padding="5"
                    Style="{StaticResource HoverButtonStyle}"/>
                    <Button Content="📧 Mail" Background="Transparent" Foreground="#FF3A71A4" Padding="5"
                    Style="{StaticResource HoverButtonStyle}"/>
                </StackPanel>
            </Expander>

            <!-- Liste-Menü als Expander mit Animation -->
            <Expander Header="📋 Liste" Background="Transparent" FontSize="22" Foreground="White" Width="300">
                <Expander.RenderTransform>
                    <ScaleTransform ScaleY="1"/>
                </Expander.RenderTransform>
                <Expander.Triggers>
                    <EventTrigger RoutedEvent="Expander.Expanded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                         From="0" To="1" Duration="0:0:0.3"
                                         AccelerationRatio="0.3" DecelerationRatio="0.7"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Expander.Triggers>
                <StackPanel Background="White" >
                    <Button x:Name="sponsor_list_prnt" Content="📝 Sponsorenliste" Click="sponsor_list_prnt_Click"
                    Background="Transparent" Foreground="#FF3A71A4" Padding="5"
                    Style="{StaticResource HoverButtonStyle}"/>
                </StackPanel>
            </Expander>

        </StackPanel>




        <DataGrid x:Name="dataGrid_sponsoren" 
          HeadersVisibility="Column" 
          Style="{StaticResource ModernDataGridStyle}"  
          AutoGenerateColumns="False"
          CanUserResizeColumns="False" 
          CanUserResizeRows="False" 
          ColumnWidth="*" 
          EnableRowVirtualization="True" 
          SelectionChanged="dataGrid_sponsoren_SelectionChanged" 
          Background="Transparent" 
          HorizontalAlignment="Left" 
          Width="1082" 
          Margin="120,0,0,0" 
          Grid.Column="1" 
          Height="490" 
          VerticalAlignment="Center" 
          Grid.Row="1">

            <DataGrid.Columns>
                <DataGridTextColumn Header="Firma" Binding="{Binding Firma}" />
                <DataGridTextColumn Header="Ansprechpartner" Binding="{Binding Ansprechpartner}" />
                <DataGridTextColumn Header="Adresse" Binding="{Binding Adresse}" />
                <DataGridTextColumn Header="Betrag">
                    <DataGridTextColumn.Binding>
                        <Binding Path="Betrag" StringFormat="{}{0:C}">
                            <Binding.ConverterCulture>de-DE</Binding.ConverterCulture>
                        </Binding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>

            </DataGrid.Columns>
        </DataGrid>


        <Button x:Name="btn_dialog" Style="{StaticResource SpecialButtonStyle}" BorderThickness="0" Content="hinzufügen" HorizontalAlignment="Left" Height="45" VerticalAlignment="Top" Width="146" Background="#FF287BC7" Foreground="White" Click="btn_dialog_Click" RenderTransformOrigin="0.51,2" Margin="1052,80,0,0" Grid.Column="1" Grid.Row="2"/>
        <Button
                Width="144" VerticalAlignment="Top" Style="{StaticResource SpecialButtonStyle_border}" x:Name="btn_delete" Height="40" HorizontalAlignment="Left" Content="löschen" BorderThickness="2" BorderBrush="#FF287BC7" Background="White" Foreground="#FF287BC7" Click="btn_delete_Click_1" RenderTransformOrigin="0.542,-1.215" Margin="1054,15,0,0" Grid.Column="1" Grid.Row="2"/>
        <TextBox x:Name="tbx_search" Height="40" Style="{StaticResource ModernTextBox}" TextWrapping="Wrap" Text="suchen" Width="222" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.518,-0.194" BorderBrush="#FF287BC7" Background="White" BorderThickness="2" FontSize="12" Margin="120,52,0,0" Grid.Column="1"/>
        <Button
        Width="146" Style="{StaticResource SpecialButtonStyle_border}" x:Name="btn_search" HorizontalAlignment="Left" Content="suchen" BorderThickness="2" BorderBrush="#FF287BC7" Background="White" Foreground="#FF287BC7" Click="btn_search_Click" Height="40" VerticalAlignment="Top" Grid.Column="1" Margin="1054,52,0,0"/>
        <TextBox x:Name="tbx_Firma" Style="{StaticResource ModernTextBox}" HorizontalAlignment="Left" Height="45" Margin="120,10,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="270" Grid.Column="1" Grid.Row="2" IsEnabled="False"/>
        <TextBox x:Name="tbx_adress"  Style="{StaticResource ModernTextBox}" HorizontalAlignment="Left" Height="45" Margin="403,10,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="270" Grid.Column="1" Grid.Row="2" IsEnabled="False"/>
        <TextBox x:Name="tbx_anspr" Style="{StaticResource ModernTextBox}" HorizontalAlignment="Left" Height="45" Margin="120,80,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="270" Grid.Column="1" Grid.Row="2" IsEnabled="False"/>
        <TextBox x:Name="tbx_sum" Style="{StaticResource ModernTextBox}" HorizontalAlignment="Left" Height="40" Margin="403,52,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="207" Grid.Column="1" IsEnabled="False"/>
        <TextBox x:Name="tbx_betrag" Style="{StaticResource ModernTextBox}" HorizontalAlignment="Left" Height="45" Margin="466,80,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="207" Grid.Column="1" Grid.Row="2" IsEnabled="False"/>



    </Grid>
</Window>

